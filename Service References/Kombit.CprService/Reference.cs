//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NDK.Framework.Kombit.CprService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://serviceplatformen.dk/xml/wsdl/soap11/CprService/2/", ConfigurationName="Kombit.CprService.CprLookupServicePortType")]
    public interface CprLookupServicePortType {
        
        // CODEGEN: Generating message contract since the operation callGctpService is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NDK.Framework.Kombit.CprService.callGctpServiceResponse callGctpService(NDK.Framework.Kombit.CprService.callGctpServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<NDK.Framework.Kombit.CprService.callGctpServiceResponse> callGctpServiceAsync(NDK.Framework.Kombit.CprService.callGctpServiceRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://serviceplatformen.dk/xml/wsdl/soap11/CprService/2/")]
    public partial class GCTPLookupRequestType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private InvocationContextType invocationContextField;
        
        private string gctpMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://serviceplatformen.dk/xml/schemas/InvocationContext/1/", Order=0)]
        public InvocationContextType InvocationContext {
            get {
                return this.invocationContextField;
            }
            set {
                this.invocationContextField = value;
                this.RaisePropertyChanged("InvocationContext");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string gctpMessage {
            get {
                return this.gctpMessageField;
            }
            set {
                this.gctpMessageField = value;
                this.RaisePropertyChanged("gctpMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://serviceplatformen.dk/xml/schemas/InvocationContext/1/")]
    public partial class InvocationContextType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string serviceAgreementUUIDField;
        
        private string userSystemUUIDField;
        
        private string userUUIDField;
        
        private string onBehalfOfUserField;
        
        private string serviceUUIDField;
        
        private string callersServiceCallIdentifierField;
        
        private string accountingInfoField;
        
        /// <remarks/>
        public string ServiceAgreementUUID {
            get {
                return this.serviceAgreementUUIDField;
            }
            set {
                this.serviceAgreementUUIDField = value;
                this.RaisePropertyChanged("ServiceAgreementUUID");
            }
        }
        
        /// <remarks/>
        public string UserSystemUUID {
            get {
                return this.userSystemUUIDField;
            }
            set {
                this.userSystemUUIDField = value;
                this.RaisePropertyChanged("UserSystemUUID");
            }
        }
        
        /// <remarks/>
        public string UserUUID {
            get {
                return this.userUUIDField;
            }
            set {
                this.userUUIDField = value;
                this.RaisePropertyChanged("UserUUID");
            }
        }
        
        /// <remarks/>
        public string OnBehalfOfUser {
            get {
                return this.onBehalfOfUserField;
            }
            set {
                this.onBehalfOfUserField = value;
                this.RaisePropertyChanged("OnBehalfOfUser");
            }
        }
        
        /// <remarks/>
        public string ServiceUUID {
            get {
                return this.serviceUUIDField;
            }
            set {
                this.serviceUUIDField = value;
                this.RaisePropertyChanged("ServiceUUID");
            }
        }
        
        /// <remarks/>
        public string CallersServiceCallIdentifier {
            get {
                return this.callersServiceCallIdentifierField;
            }
            set {
                this.callersServiceCallIdentifierField = value;
                this.RaisePropertyChanged("CallersServiceCallIdentifier");
            }
        }
        
        /// <remarks/>
        public string AccountingInfo {
            get {
                return this.accountingInfoField;
            }
            set {
                this.accountingInfoField = value;
                this.RaisePropertyChanged("AccountingInfo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://serviceplatformen.dk/xml/wsdl/soap11/CprService/2/")]
    public partial class GCTPLookupResponseType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("result");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class callGctpServiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://serviceplatformen.dk/xml/wsdl/soap11/CprService/2/", Order=0)]
        public NDK.Framework.Kombit.CprService.GCTPLookupRequestType callGCTPCheckServiceRequest;
        
        public callGctpServiceRequest() {
        }
        
        public callGctpServiceRequest(NDK.Framework.Kombit.CprService.GCTPLookupRequestType callGCTPCheckServiceRequest) {
            this.callGCTPCheckServiceRequest = callGCTPCheckServiceRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class callGctpServiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://serviceplatformen.dk/xml/wsdl/soap11/CprService/2/", Order=0)]
        public NDK.Framework.Kombit.CprService.GCTPLookupResponseType callGCTPCheckServiceResponse;
        
        public callGctpServiceResponse() {
        }
        
        public callGctpServiceResponse(NDK.Framework.Kombit.CprService.GCTPLookupResponseType callGCTPCheckServiceResponse) {
            this.callGCTPCheckServiceResponse = callGCTPCheckServiceResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CprLookupServicePortTypeChannel : NDK.Framework.Kombit.CprService.CprLookupServicePortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CprLookupServicePortTypeClient : System.ServiceModel.ClientBase<NDK.Framework.Kombit.CprService.CprLookupServicePortType>, NDK.Framework.Kombit.CprService.CprLookupServicePortType {
        
        public CprLookupServicePortTypeClient() {
        }
        
        public CprLookupServicePortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CprLookupServicePortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CprLookupServicePortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CprLookupServicePortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NDK.Framework.Kombit.CprService.callGctpServiceResponse NDK.Framework.Kombit.CprService.CprLookupServicePortType.callGctpService(NDK.Framework.Kombit.CprService.callGctpServiceRequest request) {
            return base.Channel.callGctpService(request);
        }
        
        public NDK.Framework.Kombit.CprService.GCTPLookupResponseType callGctpService(NDK.Framework.Kombit.CprService.GCTPLookupRequestType callGCTPCheckServiceRequest) {
            NDK.Framework.Kombit.CprService.callGctpServiceRequest inValue = new NDK.Framework.Kombit.CprService.callGctpServiceRequest();
            inValue.callGCTPCheckServiceRequest = callGCTPCheckServiceRequest;
            NDK.Framework.Kombit.CprService.callGctpServiceResponse retVal = ((NDK.Framework.Kombit.CprService.CprLookupServicePortType)(this)).callGctpService(inValue);
            return retVal.callGCTPCheckServiceResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NDK.Framework.Kombit.CprService.callGctpServiceResponse> NDK.Framework.Kombit.CprService.CprLookupServicePortType.callGctpServiceAsync(NDK.Framework.Kombit.CprService.callGctpServiceRequest request) {
            return base.Channel.callGctpServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<NDK.Framework.Kombit.CprService.callGctpServiceResponse> callGctpServiceAsync(NDK.Framework.Kombit.CprService.GCTPLookupRequestType callGCTPCheckServiceRequest) {
            NDK.Framework.Kombit.CprService.callGctpServiceRequest inValue = new NDK.Framework.Kombit.CprService.callGctpServiceRequest();
            inValue.callGCTPCheckServiceRequest = callGCTPCheckServiceRequest;
            return ((NDK.Framework.Kombit.CprService.CprLookupServicePortType)(this)).callGctpServiceAsync(inValue);
        }
    }
}
